
spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/outland_dev
    username: postgres
    password: ${POSTGRES_PASSWORD}
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
      naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            scope:
              - email
              - profile
          facebook:
            client-id: ${FACEBOOK_APP_ID}
            client-secret: ${FACEBOOK_APP_SECRET}
            redirect-uri: "{base_url}/oauth2/callback/{registration_id}"
            scope:
              - email
              - public_profile
        provider:
          facebook:
            authorization-uri: https://www.facebook.com/v3.0/dialog/oauth
            token-uri: https://graph.facebook.com/v3.0/oauth/access_token
            user-info-uri: https://graph.facebook.com/v3.0/me?fields=id,first_name,middle_name,last_name,name,email,verified,is_verified,picture.width(250).height(250)

app:
  auth:
    token-secret: ${JWT_SECRET}
    token-expiration-ms: 864000000
  cors:
    allowed-origins: http://localhost:3000, http://localhost:4200
  oauth2:
    authorized-redirect-uris:
      - http://localhost:3000/oauth2/redirect
      - androidapp://oauth2/redirect
      - iosapp://oauth2/redirect
server:
  servlet:
    context-path: /api/v1
